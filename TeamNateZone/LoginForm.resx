<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAsJCQcJCQcJCQkJCwkJCQkJCQsJCwsMCwsLDA0QDBEODQ4M
        EhkSJRodJR0ZHxwpKRYlNzU2GioyPi0pMBk7IRP/2wBDAQcICAsJCxULCxUsHRkdLCwsLCwsLCwsLCws
        LCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCwsLCz/wAARCAFjAdYDASIAAhEBAxEB/8QA
        GAABAQEBAQAAAAAAAAAAAAAAAAIBAwf/xAAcEAEBAQADAQEBAAAAAAAAAAAAEQESIVECMbH/xAAWAQEB
        AQAAAAAAAAAAAAAAAAAAAgH/xAAYEQEBAQEBAAAAAAAAAAAAAAAAEQExAv/aAAwDAQACEQMRAD8A9a36
        7Zy31P1vesrKmr5b6ct9RSlKvlvpy31FKUq+W+nLfUUpSr5b6ct9RSlKvlvpy31FKUq+W+nLfUUpSr5b
        6ct9RSlKvlvpy31FKUq+W+nLfUUpSr5b6ct9RSlKvlvpy31FKUq+W+nLfUUpSr5b6ct9RSlKvlvpy31F
        KUq+W+nLfUUpSr5b6ct9RSlKvlvpy31FKUq+W+nLfUUpSr5b6ct9RSlKvlvpy31FKUq+W+nLfUUpSr5b
        6ct9RSlKvlvpy31FKUq+W+nLfUUpSr5b6ct9RSlKvlvpy31FKUq+W+nLfUUpSr5b6ct9RSlKvlvoihSp
        +t71lT9fusRUVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdK
        gKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdKgKVdEBSp+t
        71lT9b3rKmoq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6V
        FKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFK
        Uq6VFKUq6VFKUq6VFKUq6IoUqfre9ZWfW96ypQqlTSjVUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFU
        qaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFU
        qaUFUqaUFUqaUFUqaUFUTQYn63vWVP1vesqUrpUUoLpUUoLpUUoLpUUoLpUUoLpUUoLpUUoLpUUoLpUU
        oLpUUoLpUUoLpUUoLpUUoLpUUoLpUUoLpUUoLpUUoLpUUoLpUUoLpUUoLpUUoLpUUoLpUUoLpUUoLpUU
        oLpUUoLpUUoLpUUoLoihSp+t71lT9bl1lxCKulRcLjSrpUXC4FXSouFwKulRcLgVdKi4XAq6VFwuBV0q
        LhcCrpUXC4FXSouFwKulRcLgVdKi4XAq6VFwuBV0qLhcCrpUXC4FXSouFwKulRcLgVdKi4XAq6VFwuBV
        0qLhcCrpUXC4FXSouFwKulRcLgVdKi4XAq6VFwuBV0qLhcCrpUXC4FXSouFwKulRcLgVdEXBhU/W96yp
        3e9ZWVFXSopSi6VFKUXSopSi6VFKUXSopSi6VFKUXSopSi6VFKUXSopSi6VFKUXSopSi6VFKUXSopSi6
        VFKUXSopSi6VFKUXSopSi6VFKUXSopSi6VFKUXSopSi6VFKUXSopSi6VFKUXSopSi6VFKUXSopSi6VFK
        UXRFClTu96VO73rKipq6VFK2lXSopSlXSopSlXSopSlXSopSlXSopSlXSopSlXSopSlXSopSlXSopSlX
        SopSlXSopSlXSopSlXSopSlXSopSlXSopSlXSopSlXSopSlXSopSlXSopSlXSopSlXSopSlXSopSlXSo
        pSlXSopSlXSopSlXSopSlXSopSlXRFGUqd3vWVO7l1lxKF0qLhcBdKi4XAXSouFwF0qLhcBdKi4XAXSo
        uFwF0qLhcBdKi4XAXSouFwF0qLhcBdKi4XAXSouFwF0qLhcBdKi4XAXSouFwF0qLhcBdKi4XAXSouFwF
        0qLhcBdKi4XAXSouFwF0qLhcBdKi4XAXSouFwF0qLhcBdKi4XAXSouFwF0qLhcBdEXAE7vesqd3vWVKK
        ulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulR
        ShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKuiKMpU
        7vesqd3vWVKF0qKVoulRSgulRSgulRSgulRSgulRSgulRSgulRSgulRSgulRSgulRSgulRSgulRSgulR
        SgulRSgulRSgulRSgulRSgulRSgulRSgulRSgulRSgulRSgulRSgulRSgulRSgulRSgulRSguiKMpU7v
        esrN3vWVKVUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUF
        UqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUqaUFUTQEbvesrN
        3vWVNRVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVU
        qaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqaUpVUqa
        UpVUqaUpVUqaUpVUTQpU7vesqd3tlTU1dKilKVdKilKVdKilKVdKilKVdKilKVdKilKVdKilKVdKilKV
        dKilKVdKilKVdKilKVdKilKVdKilKVdKilKVdKilKVdKilKVdKilKVdKilKVdKilKVdKilKVdKilKVdK
        ilKVdKilKVdKilKVdKilKVdKilKVdKilKVdKilKVdEUKyp3e2VG72VKaulRStKulRShV0qKUKulRShV0
        qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKU
        KulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0RRjE7vbKnd7ZUpq6VFKFXSopQq6V
        FKFXSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6VFKF
        XSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6IoFTu9sqd/WJSulQAu
        lQAulQAulQAulQAulQAulQAulQAulQAulQAulQAulQAulQAulQAulQAulQAulQAulQAulQAulQAulQAu
        lQAulQAulQAulQAulQAulQAulQAuiAYnd7Kjd7Kmpq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6V
        FKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFK
        Uq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6VFKUq6IoVlRu9lRu9lTUrpUUpRdKilKLpUU
        pRdKilKLpUUpRdKilKLpUUpRdKilKLpUUpRdKilKLpUUpRdKilKLpUUpRdKilKLpUUpRdKilKLpUUpRd
        KilKLpUUpRdKilKLpUUpRdKilKLpUUpRdKilKLpUUpRdKilKLpUUpRdKilKLoijKxG72VG72ViaulRSj
        aulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKul
        RShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0RRjKjd7Kj
        dKxFXSopRtXSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSop
        Qq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6VFKFXSopQq6
        Iowqayp3WViKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKul
        RShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRShV0qKUKulRSh
        V0qKUKuiKMYv7zM+/vMzrPr6/rmDN6eu6AMSAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAM03r/2Q==
</value>
  </data>
</root>