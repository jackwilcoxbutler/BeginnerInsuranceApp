<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSettings.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        8VFCXhCpPfA3QqT5TRTX6iEAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAwADAAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCADhAOEDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKA
        CiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAoork/iD4nPhTwlLrEY3MjKqj1z
        0oAk8QeKdA8NIo13WRGzdE7n8AKh8PfEbw14gQi21WIyDqj/AC183Vz9AH2/RXi/w68RePbjwz5H9iF9
        ucarqbFcjsf7031GPrW/J4Y8fzLuufiAI07Cx0pTQB6TRXnn/CMfEX/oop/8E9tVYzePvDP7+TQdF1iJ
        Rhjpu5Log+uRg0AemUVyWgeLNF8T2xELIsuzJ0+Ti5XHqM5/z1rC8R/Grw34eZEjl/tZm72DAgfUk4/W
        gD0qivPPDXxT8P8AiRHDf8Sp17akQM/Q5x+teh0AFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRR
        RQAUUUUAFeZ/GmHd4LjuY/v6ZfR32P8Ad3f/ABVemVn6r9i+x/8AEy2+VmgD4wr334afDQQKfEPiFmbX
        icohODZHnHGetO+GXhpSn/CRyYO/jSwzf8eVoc+tewUAFFFFABRRRQBxvib4b6J4ljaeaIR6ttAXUFH7
        wEfpXzp4j8OHwmyaFrsnP3ldD+tfXted/E7wunijwvjYp1lTnTsHBzkcflQB8yV9KfBXxR/wkfgwQOmJ
        NOYQn8QSK+a696+Bvh0r4Y1XW5D8+rkgD0Az/U0Aey0UUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAF
        FFFABRRRQAV5x8Srhbk6D4dViRq2pjzFA6WkI3T8/SvR68+/5rR/3K3/ALc0Aeg15v4q+JkXhyQaH9/X
        CowMfLz3r0ivkCgD0D/haviT/qB16x4V8QJ4p8Mi5AwxXaa+R69/8I25+HXhPWtc1+EaW0jgKgG4k9sD
        uc0AewVyPiH4jeGvD6AXOqxCQ9ET5qseFfFXh7xJGzaHIGC9flxXzNQB9M+FfFXh7xJGzaHIGC9flxXT
        V8heF1KO3iI9VODX0v4V8VJ4k8Ix64qBQwPH0oA8q8R/D7RY/i+f7akdND1ZXvOH2/6UScr9Dkn8a97r
        zb4jQ/ZvF3gPXEJO3VBp5HtcLjP/AI6a9JoAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAo
        oooAK8y8Qr/wj3xV8O64/D6stzpspHTPBgH4mvTa5LxZoEPifw20IaPzVXfYEnG255wfz/rQB1tfL3ij
        4YeIPDW7a4fQQecNnH1r3Pwl4ibxL4aVmaMasihb6MDGxu/6V11AHz38M/C27xc3iBZAmiaUrBCT3xXU
        eIvFvgbXPC+q6VrZkjaN8jTxxdhhgjHvn9K9cooA8Z+GQ8N+HfC0mvSa0p1RlzqZL5wc/dx/WsH416Hn
        xos0X39RsCv/AAJT/wDqr1r/AIRjw35n9tf2DpXm7d3mbB0/LH6VN4p8LJ4jjVWYDA70AfIlfTvwv/5E
        bQv901zvh/4HRhmfxHrbauvZRnA/Ek17JQB5r8SSDqPgnRUPzf2mL0H/AGbdcn/0KvSq810QDxP8UbjX
        y2dI0dX0/ThwP9JI/fHHXpkZ+lelUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFe
        b/E7xV/wi3hJlQKNZ1QBEUeuOfy6V6RXz18df+RrH/YLb+ZoA4rw34kk8Ky/23omUKHYyyZ/07n9K+if
        DXxE0DxVBtt5ttyRg2TjL1841z9AH2/RXyE3inxH4aO0eIdZAPbPH6mu+8N/Hv7ya3oH+6+mL/MZ/rQB
        7/RXi3iT45RJGo8Oxxq/c6ipQfoa8tPivX2k/wCQ/rTRn+HTf9DH6YoA+u68A+JnxS/1nh/Qm/7CGpqP
        pkQc/Xn/AOua4Lf4j/6GDWv/AAan/GucoA+gPgV4nW58LS6HIuJNLzk+xJP8816/XzB8C/8AkqI/7Brf
        +y19P0AFFFFABRRRQAUUUUAFFFFABRRRQAUUUUAFFFFABXmn/F3P+pY/8mK9LooA89/4vD/1JP8A5NUf
        8Xh/6kn/AMmq9CooA89/4vD/ANST/wCTVefeKPC/jvxAY9c1r+xtWTSgSkemPkt3PYfXFfQdFAHxBXQV
        9L+IPC2geJUU67owkZej9x+INcv/AMKP+Hn/ADwm/wDA1v8AGgDxCufr6V/4Ul4W/wCe2s/+B5qbw18M
        9B0Eu5/tPVHbp/aByB9BgUAfMldBXvniX4WeH/EiIV/4lTr300AZ+oxj9Kx/+FGeHf7usf8Agev+FAHj
        dc/X0r/wpLwt/wA9tZ/8DzXQ6D8P/DfhYl9J0pFkPV3bcfzNAHk/hTwt4+8OO+vaE+kY1YAsNSYhh3HS
        u/8A+Lw/9ST/AOTVehUUAee/8Xh/6kn/AMmqP+Lw/wDUk/8Ak1XoVFAHnv8AxeH/AKkn/wAmq9CoooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAKKKKACiiigAooooAK
        KKKACiiigAooooA//9k=
</value>
  </data>
</root>